generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id       String @id @default(uuid())
  nome     String
  email    String @unique
  password String
  currency String @default("BRL")

  expenses        expenses[]
  incomes         incomes[]
  investments     investimentos[]
  categorias      categorias[]
  cards           cards[]
  expense_history expense_history[]
  thresholds      thresholds[]
}

model categorias {
  id        String  @id @default(uuid())
  nome      String
  cor       String
  tipo      String
  parent_id String?
  user_id   String

  user     users        @relation(fields: [user_id], references: [id])
  parent   categorias?  @relation("CategoriaFilha", fields: [parent_id], references: [id])
  children categorias[] @relation("CategoriaFilha")

  expenses   expenses[]
  incomes    incomes[]
  thresholds thresholds[]
}

model cards {
  id             String @id @default(uuid())
  user_id        String
  nome           String
  tipo           String
  numero         String
  cor            String
  limite         Float
  dia_vencimento Int?

  user     users      @relation(fields: [user_id], references: [id])
  expenses expenses[]
}

model expenses {
  id               String   @id @default(uuid())
  metodo_pagamento String
  tipo             String
  quantidade       Float
  fixo             Boolean  @default(false)
  data             DateTime
  parcelas         Int?
  frequencia       String?
  user_id          String
  card_id          String?
  category_id      String?

  user     users       @relation(fields: [user_id], references: [id])
  card     cards?      @relation(fields: [card_id], references: [id])
  category categorias? @relation(fields: [category_id], references: [id])

  history expense_history[]
}

model expense_history {
  id             String   @id @default(uuid())
  expense_id     String
  user_id        String
  tipo           String
  alteracao      Json
  data_alteracao DateTime @default(now())

  user    users    @relation(fields: [user_id], references: [id])
  expense expenses @relation(fields: [expense_id], references: [id])
}

model incomes {
  id          String   @id @default(uuid())
  tipo        String
  quantidade  Float
  nota        String?
  data        DateTime
  fonte       String
  user_id     String
  category_id String?

  user     users       @relation(fields: [user_id], references: [id])
  category categorias? @relation(fields: [category_id], references: [id])
}

model investimentos {
  id         String   @id @default(uuid())
  tipo       String
  nome       String
  quantidade Float
  descricao  String?
  data       DateTime
  user_id    String

  user users @relation(fields: [user_id], references: [id])
}

model thresholds {
  id          String @id @default(uuid())
  user_id     String
  category_id String
  valor       Float

  user     users      @relation(fields: [user_id], references: [id])
  category categorias @relation(fields: [category_id], references: [id])

  @@unique([user_id, category_id])
}
